{"ast":null,"code":"import axiosWithAuth from '../utils/axiosWithAuth';\nexport const ADD_PARENT = 'ADD_PARENT';\nexport const FETCHING_MESSAGE_START = 'FETCHING_MESSAGE_START';\nexport const FETCHING_MESSAGE_SUCCESS = 'FETCHING_MESSAGE_SUCESS';\nexport const FETCHING_MESSAGE_FAILURE = 'FETCHING_MESSAGE_FAILURE';\nexport const getParent = () => dispatch => {\n  dispatch({\n    type: FETCHING_MESSAGE_START\n  });\n  axiosWithAuth().get('https://disney-parent-lambda.herokuapp.com/api/requests/all').then(res => {\n    console.log(res);\n    dispatch({\n      type: FETCHING_MESSAGE_SUCCESS,\n      payload: res.data\n    });\n  }).catch(err => {\n    console.log(err.toString());\n    dispatch({\n      type: FETCHING_MESSAGE_FAILURE,\n      payload: err.toString()\n    });\n  });\n};\nexport const addParent = newParent => dispatch => {\n  console.log(newParent);\n  axiosWithAuth().post('https://disney-parent-lambda.herokuapp.com/api/requests', newParent).then(res => {\n    console.log(res);\n    dispatch({\n      type: FETCHING_MESSAGE_SUCCESS,\n      payload: res.data\n    });\n  }).catch(err => {\n    console.log(err.toString());\n    dispatch({\n      type: FETCHING_MESSAGE_FAILURE,\n      payload: err.toString()\n    });\n  });\n};","map":{"version":3,"sources":["/Users/ambersorensen/Desktop/Lambda/GH-Lambda/front-end/dp-front-end/src/components/store/actions/index.js"],"names":["axiosWithAuth","ADD_PARENT","FETCHING_MESSAGE_START","FETCHING_MESSAGE_SUCCESS","FETCHING_MESSAGE_FAILURE","getParent","dispatch","type","get","then","res","console","log","payload","data","catch","err","toString","addParent","newParent","post"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,wBAA1B;AAEA,OAAO,MAAMC,UAAU,GAAG,YAAnB;AACP,OAAO,MAAMC,sBAAsB,GAAG,wBAA/B;AACP,OAAO,MAAMC,wBAAwB,GAAG,yBAAjC;AACP,OAAO,MAAMC,wBAAwB,GAAG,0BAAjC;AAEP,OAAO,MAAMC,SAAS,GAAG,MAAMC,QAAQ,IAAI;AACvCA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEL;AAAR,GAAD,CAAR;AAEAF,EAAAA,aAAa,GACRQ,GADL,CACS,6DADT,EAEKC,IAFL,CAEUC,GAAG,IAAI;AACTC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAJ,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEJ,wBAAR;AAAkCU,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAA/C,KAAD,CAAR;AACH,GALL,EAMKC,KANL,CAMWC,GAAG,IAAI;AACVL,IAAAA,OAAO,CAACC,GAAR,CAAYI,GAAG,CAACC,QAAJ,EAAZ;AACAX,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEH,wBAAR;AAAkCS,MAAAA,OAAO,EAAEG,GAAG,CAACC,QAAJ;AAA3C,KAAD,CAAR;AACH,GATL;AAUH,CAbM;AAiBP,OAAO,MAAMC,SAAS,GAAIC,SAAD,IAAeb,QAAQ,IAAI;AAChDK,EAAAA,OAAO,CAACC,GAAR,CAAYO,SAAZ;AACAnB,EAAAA,aAAa,GACRoB,IADL,CACU,yDADV,EACqED,SADrE,EAEKV,IAFL,CAEUC,GAAG,IAAI;AACTC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAJ,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEJ,wBAAR;AAAkCU,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAA/C,KAAD,CAAR;AACH,GALL,EAMKC,KANL,CAMWC,GAAG,IAAI;AACVL,IAAAA,OAAO,CAACC,GAAR,CAAYI,GAAG,CAACC,QAAJ,EAAZ;AACAX,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEH,wBAAR;AAAkCS,MAAAA,OAAO,EAAEG,GAAG,CAACC,QAAJ;AAA3C,KAAD,CAAR;AACH,GATL;AAUH,CAZM","sourcesContent":["import axiosWithAuth from '../utils/axiosWithAuth';\n\nexport const ADD_PARENT = 'ADD_PARENT';\nexport const FETCHING_MESSAGE_START = 'FETCHING_MESSAGE_START';\nexport const FETCHING_MESSAGE_SUCCESS = 'FETCHING_MESSAGE_SUCESS';\nexport const FETCHING_MESSAGE_FAILURE = 'FETCHING_MESSAGE_FAILURE';\n\nexport const getParent = () => dispatch => {\n    dispatch({ type: FETCHING_MESSAGE_START });\n\n    axiosWithAuth()\n        .get('https://disney-parent-lambda.herokuapp.com/api/requests/all')\n        .then(res => {\n            console.log(res);\n            dispatch({ type: FETCHING_MESSAGE_SUCCESS, payload: res.data })\n        })\n        .catch(err => {\n            console.log(err.toString())\n            dispatch({ type: FETCHING_MESSAGE_FAILURE, payload: err.toString() })\n        })\n}\n\n\n\nexport const addParent = (newParent) => dispatch => {\n    console.log(newParent);\n    axiosWithAuth()\n        .post('https://disney-parent-lambda.herokuapp.com/api/requests', newParent)\n        .then(res => {\n            console.log(res)\n            dispatch({ type: FETCHING_MESSAGE_SUCCESS, payload: res.data })\n        })\n        .catch(err => {\n            console.log(err.toString())\n            dispatch({ type: FETCHING_MESSAGE_FAILURE, payload: err.toString() })\n        })\n}"]},"metadata":{},"sourceType":"module"}