{"ast":null,"code":"import _defineProperty from \"/Users/ambersorensen/Desktop/Lambda/GH-Lambda/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/ambersorensen/Desktop/Lambda/GH-Lambda/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ambersorensen/Desktop/Lambda/GH-Lambda/front-end/dp-front-end/src/components/ParentForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { addParent, getParent } from './store/actions/index.js';\nimport axiosWithAuth from './store/utils/axiosWithAuth.js';\n\nconst ParentForm = props => {\n  const _useState = useState({\n    meetingPlace: '',\n    dateTime: '',\n    kids: '',\n    description: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        parent = _useState2[0],\n        setParent = _useState2[1];\n\n  const changeHandler = e => {\n    setParent(_objectSpread({}, parent, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  useEffect(() => {\n    getParent();\n  }, []);\n\n  const submitForm = e => {\n    e.preventDefault();\n\n    const newParent = _objectSpread({}, parent, {\n      requesterUserID: 1\n    });\n\n    props.addParent(newParent);\n    setParent({\n      meetingPlace: '',\n      dateTime: '',\n      kids: '',\n      description: ''\n    });\n  };\n\n  return React.createElement(\"form\", {\n    onSubmit: submitForm,\n    className: \"parentForm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"meeting place\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Meeting Place: \"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"meetingPlace\",\n    placeholder: \"Where you would like to meet\",\n    value: parent.meetingPlace,\n    onChange: changeHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"date time\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Date and Time: \"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"dateTime\",\n    placeholder: \"YYYY-MM-DD HH:MM\",\n    value: parent.dateTime,\n    onChange: changeHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"kids\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Number of Kids:\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"kids\",\n    placeholder: \"Number of Kids you Have\",\n    value: parent.kids,\n    onChange: changeHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Post Your Request: \"), React.createElement(\"input\", {\n    type: \"field\",\n    name: \"description\",\n    placeholder: \"Write What You Are Requesting Help For\",\n    value: parent.description,\n    onChange: changeHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Post Request\"));\n};\n\nconst mapStateToProps = state => {\n  return {\n    meetingPlace: '',\n    dateTime: '',\n    kids: '',\n    description: ''\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addParent\n})(ParentForm); // import { withFormik, Form, Field } from 'formik';\n// import * as Yup from 'yup';\n// import axiosWithAuth from '../components/store/utils/axiosWithAuth';\n// const ParentForm = ({ errors, touched, status }) => {\n//     console.log(ParentForm);\n//     const [users, setUsers] = useState([]);\n//     useEffect(() => {\n//         if (status) {\n//             setUsers([...users, status]);\n//         }\n//     }, [status]);\n//     return (\n//         <div className=\"parent-form\">\n//             <Form>\n//                 <Field type=\"text\" name=\"meetingPlace\" placeholder=\"Where you want to meet\" />\n//                 {touched.meetingPlace && errors.meetingPlace && <p className=\"error\">{errors.meetingPlace}</p>}\n//                 <Field type=\"text\" name=\"dateTime\" placeholder=\"YYYY-MM-DD HH:MM\" />\n//                 {touched.dateTime && errors.dateTime && <p className=\"error\">{errors.dateTime}</p>}\n//                 <Field type=\"text\" name=\"kids\" placeholder=\"Number of kids you have\" />\n//                 {touched.kids && errors.kids && <p className=\"error\">{errors.kids}</p>}\n//                 <Field type=\"text\" name=\"description\" placeholder=\"Write What You Are Requesting Help For\" />\n//                 {touched.description && errors.description && <p className=\"error\">{errors.description}</p>}\n//                 <button type=\"submit\">Post Request</button>\n//             </Form>\n//         </div>\n//     );\n// };\n// const FormikMyForm = withFormik({\n//     mapPropsToValues({ meetingPlace, dateTime, kids, description }) {\n//         return {\n//             meetingPlace: meetingPlace || \"\",\n//             dateTime: dateTime || \"\",\n//             kids: kids || \"\",\n//             description: description || \"\"\n//         };\n//     },\n//     validationSchema: Yup.object().shape({\n//         meetingPlace: Yup.string().required(\"Must input meeting place\"),\n//         dateTime: Yup.string().required(\"Must input a date and time\"),\n//         kids: Yup.string().required(\"Must input number of kids\"),\n//         description: Yup.string().required(\"Must input a request\"),\n//     }),\n//     handleSubmit(values, { setStatus }) {\n//         axiosWithAuth\n//             .post(\"https://disney-parent-lambda.herokuapp.com/api/requests\", values)\n//             .then(res => {\n//                 setStatus(res.data);\n//                 console.log(res.data);\n//             })\n//             .catch(err => console.log(err.res));\n//     }\n// })(ParentForm);\n// export default FormikMyForm;","map":{"version":3,"sources":["/Users/ambersorensen/Desktop/Lambda/GH-Lambda/front-end/dp-front-end/src/components/ParentForm.js"],"names":["React","useState","useEffect","connect","addParent","getParent","axiosWithAuth","ParentForm","props","meetingPlace","dateTime","kids","description","parent","setParent","changeHandler","e","target","name","value","submitForm","preventDefault","newParent","requesterUserID","mapStateToProps","state"],"mappings":";;;;;;;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,0BAArC;AACA,OAAOC,aAAP,MAA0B,gCAA1B;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AAAA,oBACIP,QAAQ,CAAC;AAAEQ,IAAAA,YAAY,EAAE,EAAhB;AAAoBC,IAAAA,QAAQ,EAAE,EAA9B;AAAkCC,IAAAA,IAAI,EAAE,EAAxC;AAA4CC,IAAAA,WAAW,EAAE;AAAzD,GAAD,CADZ;AAAA;AAAA,QACjBC,MADiB;AAAA,QACTC,SADS;;AAGxB,QAAMC,aAAa,GAAGC,CAAC,IAAI;AACvBF,IAAAA,SAAS,mBAAMD,MAAN;AAAc,OAACG,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAAxC,OAAT;AACH,GAFD;;AAIAjB,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,SAAS;AACZ,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMe,UAAU,GAAGJ,CAAC,IAAI;AACpBA,IAAAA,CAAC,CAACK,cAAF;;AACA,UAAMC,SAAS,qBACRT,MADQ;AAEXU,MAAAA,eAAe,EAAE;AAFN,MAAf;;AAIAf,IAAAA,KAAK,CAACJ,SAAN,CAAgBkB,SAAhB;AACAR,IAAAA,SAAS,CAAC;AAAEL,MAAAA,YAAY,EAAE,EAAhB;AAAoBC,MAAAA,QAAQ,EAAE,EAA9B;AAAkCC,MAAAA,IAAI,EAAE,EAAxC;AAA4CC,MAAAA,WAAW,EAAE;AAAzD,KAAD,CAAT;AAEH,GATD;;AAaA,SACI;AAAM,IAAA,QAAQ,EAAEQ,UAAhB;AAA4B,IAAA,SAAS,EAAC,YAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,OAAO,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEI;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,IAAI,EAAC,cAHT;AAII,IAAA,WAAW,EAAC,8BAJhB;AAKI,IAAA,KAAK,EAAEP,MAAM,CAACJ,YALlB;AAMI,IAAA,QAAQ,EAAEM,aANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAUI;AAAO,IAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAVJ,EAWI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,IAAI,EAAC,UAFT;AAGI,IAAA,WAAW,EAAC,kBAHhB;AAII,IAAA,KAAK,EAAEF,MAAM,CAACH,QAJlB;AAKI,IAAA,QAAQ,EAAEK,aALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,EAkBI;AAAO,IAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAlBJ,EAmBI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,WAAW,EAAC,yBAHhB;AAII,IAAA,KAAK,EAAEF,MAAM,CAACF,IAJlB;AAKI,IAAA,QAAQ,EAAEI,aALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBJ,EA2BI;AAAO,IAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BA3BJ,EA4BI;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,IAAI,EAAC,aAFT;AAGI,IAAA,WAAW,EAAC,wCAHhB;AAII,IAAA,KAAK,EAAEF,MAAM,CAACD,WAJlB;AAKI,IAAA,QAAQ,EAAEG,aALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5BJ,EAsCI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAtCJ,CADJ;AA4CH,CApED;;AAuEA,MAAMS,eAAe,GAAGC,KAAK,IAAI;AAE7B,SAAO;AACHhB,IAAAA,YAAY,EAAE,EADX;AAEHC,IAAAA,QAAQ,EAAE,EAFP;AAGHC,IAAAA,IAAI,EAAE,EAHH;AAIHC,IAAAA,WAAW,EAAE;AAJV,GAAP;AAMH,CARD;;AAWA,eAAeT,OAAO,CAACqB,eAAD,EAAkB;AAAEpB,EAAAA;AAAF,CAAlB,CAAP,CAAwCG,UAAxC,CAAf,C,CAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { addParent, getParent } from './store/actions/index.js';\nimport axiosWithAuth from './store/utils/axiosWithAuth.js';\n\nconst ParentForm = props => {\n    const [parent, setParent] = useState({ meetingPlace: '', dateTime: '', kids: '', description: '' });\n\n    const changeHandler = e => {\n        setParent({ ...parent, [e.target.name]: e.target.value });\n    };\n\n    useEffect(() => {\n        getParent();\n    }, [])\n\n    const submitForm = e => {\n        e.preventDefault();\n        const newParent = {\n            ...parent,\n            requesterUserID: 1\n        };\n        props.addParent(newParent);\n        setParent({ meetingPlace: '', dateTime: '', kids: '', description: '' })\n\n    };\n\n  \n\n    return (\n        <form onSubmit={submitForm} className='parentForm'>\n            <label htmlFor='meeting place'>Meeting Place: </label>\n            <input\n\n                type='text'\n                name='meetingPlace'\n                placeholder='Where you would like to meet'\n                value={parent.meetingPlace}\n                onChange={changeHandler} />\n\n            <label htmlFor='date time'>Date and Time: </label>\n            <input\n                type='text'\n                name='dateTime'\n                placeholder='YYYY-MM-DD HH:MM'\n                value={parent.dateTime}\n                onChange={changeHandler} />\n\n            <label htmlFor='kids'>Number of Kids:</label>\n            <input\n                type='text'\n                name='kids'\n                placeholder='Number of Kids you Have'\n                value={parent.kids}\n                onChange={changeHandler}\n            />\n\n            <label htmlFor='description'>Post Your Request: </label>\n            <input\n                type='field'\n                name='description'\n                placeholder='Write What You Are Requesting Help For'\n                value={parent.description}\n                onChange={changeHandler} />\n\n\n\n\n            <button type='submit'>Post Request</button>\n\n\n        </form>\n    );\n};\n\n\nconst mapStateToProps = state => {\n\n    return {\n        meetingPlace: '',\n        dateTime: '',\n        kids: '',\n        description: ''\n    }\n}\n\n\nexport default connect(mapStateToProps, { addParent })(ParentForm);\n\n\n\n// import { withFormik, Form, Field } from 'formik';\n// import * as Yup from 'yup';\n// import axiosWithAuth from '../components/store/utils/axiosWithAuth';\n\n// const ParentForm = ({ errors, touched, status }) => {\n//     console.log(ParentForm);\n//     const [users, setUsers] = useState([]);\n//     useEffect(() => {\n//         if (status) {\n//             setUsers([...users, status]);\n//         }\n//     }, [status]);\n\n//     return (\n//         <div className=\"parent-form\">\n//             <Form>\n//                 <Field type=\"text\" name=\"meetingPlace\" placeholder=\"Where you want to meet\" />\n//                 {touched.meetingPlace && errors.meetingPlace && <p className=\"error\">{errors.meetingPlace}</p>}\n//                 <Field type=\"text\" name=\"dateTime\" placeholder=\"YYYY-MM-DD HH:MM\" />\n//                 {touched.dateTime && errors.dateTime && <p className=\"error\">{errors.dateTime}</p>}\n//                 <Field type=\"text\" name=\"kids\" placeholder=\"Number of kids you have\" />\n//                 {touched.kids && errors.kids && <p className=\"error\">{errors.kids}</p>}\n//                 <Field type=\"text\" name=\"description\" placeholder=\"Write What You Are Requesting Help For\" />\n//                 {touched.description && errors.description && <p className=\"error\">{errors.description}</p>}\n//                 <button type=\"submit\">Post Request</button>\n//             </Form>\n//         </div>\n//     );\n// };\n\n// const FormikMyForm = withFormik({\n//     mapPropsToValues({ meetingPlace, dateTime, kids, description }) {\n//         return {\n//             meetingPlace: meetingPlace || \"\",\n//             dateTime: dateTime || \"\",\n//             kids: kids || \"\",\n//             description: description || \"\"\n//         };\n//     },\n//     validationSchema: Yup.object().shape({\n//         meetingPlace: Yup.string().required(\"Must input meeting place\"),\n//         dateTime: Yup.string().required(\"Must input a date and time\"),\n//         kids: Yup.string().required(\"Must input number of kids\"),\n//         description: Yup.string().required(\"Must input a request\"),\n//     }),\n//     handleSubmit(values, { setStatus }) {\n//         axiosWithAuth\n//             .post(\"https://disney-parent-lambda.herokuapp.com/api/requests\", values)\n//             .then(res => {\n//                 setStatus(res.data);\n//                 console.log(res.data);\n//             })\n//             .catch(err => console.log(err.res));\n//     }\n// })(ParentForm);\n\n// export default FormikMyForm;"]},"metadata":{},"sourceType":"module"}